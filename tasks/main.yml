---

- name: add MariaDB repository
  template:
    src: mariadb.repo
    dest: /etc/yum.repos.d/mariadb.repo
    mode: 0644
  tags: mariadb

- name: install MariaDB server
  yum:
    name: "{{ packages }}"
  vars:
    packages:
      - MariaDB-server
      - MySQL-python
      - policycoreutils-python
  tags: mariadb

- name: get datadir
  stat:
    path: "{{ mariadb_config.datadir }}/mysql"
  register: datadir
  tags: mariadb

- name: copy certificates
  copy:
    content: "{{ item.content }}"
    dest: "/etc/ssl/{{ item.dest }}"
    mode: 0600
    owner: mysql
    group: mysql
  loop:
    - { content: "{{ mariadb_tls.ca }}", dest: mariadb-server.ca }
    - { content: "{{ mariadb_tls.cert }}", dest: mariadb-server.cert }
    - { content: "{{ mariadb_tls.key }}", dest: mariadb-server.key }
  when: mariadb_tls.enabled
  no_log: true
  tags: mariadb

- name: copy configuration
  template:
    src: server.cnf
    dest: /etc/my.cnf.d/server.cnf
    mode: 0644
  tags: mariadb

- name: create datadir
  file:
    path: "{{ mariadb_config.datadir }}"
    state: directory
    owner: mysql
    group: mysql
    mode: 0755
  tags: mariadb

- name: play nice with SELinux
  sefcontext:
    target: "{{ mariadb_config.datadir }}(/.*)?"
    setype: mysqld_db_t
    state: present
  tags: mariadb

- name: apply new SELinux file context to filesystem
  command: restorecon -irv "{{ mariadb_config.datadir }}"
  tags: mariadb

- name: initialize database in datadir
  command: mysql_install_db --user=mysql
  when: not datadir.stat.exists
  tags: mariadb

- name: start MariaDB
  service:
    name: mariadb
    state: restarted
    enabled: yes
  tags: mariadb

- name: check if root user as a password
  shell: mysqladmin -u root status
  changed_when: rootpw != 0
  failed_when: false
  register: rootpw
  tags: mariadb

- name: set MariaDB root password
  mysql_user:
    name: root
    host: localhost
    password: "{{ mariadb_password }}"
  when: rootpw.rc == 0
  tags: mariadb

- name: remove anonymous users
  mysql_user:
    name: ''
    host_all: yes
    login_password: "{{ mariadb_password }}"
    login_user: root
    state: absent
  tags: mariadb

- name: remove global host wildcard
  mysql_user:
    name: root
    host: '%'
    login_password: "{{ mariadb_password }}"
    login_user: root
    state: absent
  tags: mariadb

- name: remove test database
  mysql_db:
    name: test
    login_password: "{{ mariadb_password }}"
    login_user: root
    state: absent
  tags: mariadb
